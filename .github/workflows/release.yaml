---
name: release
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
jobs:
  build:
    runs-on: ubuntu-latest
    container: golang:1.14
    steps:
      - uses: actions/checkout@v2
      - name: Install the cross-platform build tool.
        run: |
          go get github.com/mitchellh/gox
          go get github.com/inconshreveable/mousetrap
      - name: Set the version number.
        run: |
          cat > cmd/api-linter/version.go <<EOF
          package main
          const version = "${{ github.ref }}"
          EOF
      - name: Build for the major platforms.
        run: |
          for arch in "linux/amd64" "linux/arm" "darwin/amd64" "windows/amd64"; do
            gox -osarch $arch -output api-linter ./... && \
            tar cvfz api-linter-${arch/\//-}.tar.gz api-linter
          done
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create the ${{ github.ref }} GitHub release.
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: api-linter ${{ github.ref }}
          draft: true # change to false once done thrashing
          prerelease: true # change to false once done thrashing
      - name: Upload the linux/amd64 release.
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./api-linter-linux-amd64.tar.gz
          asset_name: aip-linter-linux-amd64.tar.gz
          asset_content_type: application/tar+gzip
      - name: Upload the linux/arm release.
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./api-linter-linux-arm.tar.gz
          asset_name: aip-linter-linux-arm.tar.gz
          asset_content_type: application/tar+gzip
      - name: Upload the darwin/amd64 release.
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./api-linter-darwin-amd64.tar.gz
          asset_name: aip-linter-darwin-amd64.tar.gz
          asset_content_type: application/tar+gzip
      - name: Upload the windows/amd64 release.
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./api-linter-windows-amd64.tar.gz
          asset_name: aip-linter-windows-amd64.tar.gz
          asset_content_type: application/tar+gzip
