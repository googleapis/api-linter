---
name: release
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Set the version number.
        id: version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
      - name: Create the GitHub release.
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: api-linter ${{ steps.version.outputs.version }}
          draft: true # Change to false once release notes are automatic.
          prerelease: false
    outputs:
      version: ${{ steps.version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  build:
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        osarch:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm
          - os: darwin
            arch: amd64
          - os: windows
            arch: amd64
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: "1.14"
      - uses: actions/checkout@v2
      # The API linter does not use these,  but we need them to build the
      # binaries.
      #
      # Mousetrap is installed individually because it is needed for the
      # Windows build. Since we are building on Linux, it is not installed
      # automatically as a dependency.
      - name: Install the cross-platform build tool.
        run: |
          go get github.com/mitchellh/gox
          go get github.com/inconshreveable/mousetrap
      - name: Set the version number in the binary (for `api-linter --version`).
        run: |
          cat > cmd/api-linter/version.go <<EOF
          package main
          const version = "${{ needs.release.outputs.version }}"
          EOF
      - name: Build for the ${{ matrix.osarch.os }}/${{ matrix.osarch.arch }} platform.
        run: |
          gox -osarch ${{ matrix.osarch.os }}/${{ matrix.osarch.arch }} -output api-linter ./... && \
          tar cvfz api-linter.tar.gz api-linter*
      - name: Upload the ${{ matrix.osarch.os }}/${{ matrix.osarch.arch }} release.
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./api-linter.tar.gz
          asset_name: api-linter-${{ needs.release.outputs.version }}-${{ matrix.osarch.os }}-${{ matrix.osarch.arch }}.tar.gz
          asset_content_type: application/tar+gzip
